//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Pgn.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Redchess.Pgn {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="PgnParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public interface IPgnListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.parse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParse([NotNull] PgnParser.ParseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.parse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParse([NotNull] PgnParser.ParseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.parseTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParseTag([NotNull] PgnParser.ParseTagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.parseTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParseTag([NotNull] PgnParser.ParseTagContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDocument([NotNull] PgnParser.DocumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDocument([NotNull] PgnParser.DocumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.gameList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGameList([NotNull] PgnParser.GameListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.gameList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGameList([NotNull] PgnParser.GameListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.generalTagList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneralTagList([NotNull] PgnParser.GeneralTagListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.generalTagList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneralTagList([NotNull] PgnParser.GeneralTagListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.game"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGame([NotNull] PgnParser.GameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.game"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGame([NotNull] PgnParser.GameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotation([NotNull] PgnParser.AnnotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotation([NotNull] PgnParser.AnnotationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.annotationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationList([NotNull] PgnParser.AnnotationListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.annotationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationList([NotNull] PgnParser.AnnotationListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.individualMove"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndividualMove([NotNull] PgnParser.IndividualMoveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.individualMove"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndividualMove([NotNull] PgnParser.IndividualMoveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.moveList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMoveList([NotNull] PgnParser.MoveListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.moveList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMoveList([NotNull] PgnParser.MoveListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.move"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMove([NotNull] PgnParser.MoveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.move"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMove([NotNull] PgnParser.MoveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.compulsoryTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompulsoryTag([NotNull] PgnParser.CompulsoryTagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.compulsoryTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompulsoryTag([NotNull] PgnParser.CompulsoryTagContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.blockComment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockComment([NotNull] PgnParser.BlockCommentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.blockComment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockComment([NotNull] PgnParser.BlockCommentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.enterVariant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnterVariant([NotNull] PgnParser.EnterVariantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.enterVariant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnterVariant([NotNull] PgnParser.EnterVariantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.leaveVariant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeaveVariant([NotNull] PgnParser.LeaveVariantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.leaveVariant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeaveVariant([NotNull] PgnParser.LeaveVariantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.variantLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariantLine([NotNull] PgnParser.VariantLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.variantLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariantLine([NotNull] PgnParser.VariantLineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.eventTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventTag([NotNull] PgnParser.EventTagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.eventTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventTag([NotNull] PgnParser.EventTagContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.siteTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSiteTag([NotNull] PgnParser.SiteTagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.siteTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSiteTag([NotNull] PgnParser.SiteTagContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.dateTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateTag([NotNull] PgnParser.DateTagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.dateTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateTag([NotNull] PgnParser.DateTagContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.roundTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoundTag([NotNull] PgnParser.RoundTagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.roundTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoundTag([NotNull] PgnParser.RoundTagContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.blackTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlackTag([NotNull] PgnParser.BlackTagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.blackTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlackTag([NotNull] PgnParser.BlackTagContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.whiteTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhiteTag([NotNull] PgnParser.WhiteTagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.whiteTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhiteTag([NotNull] PgnParser.WhiteTagContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.resultTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResultTag([NotNull] PgnParser.ResultTagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.resultTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResultTag([NotNull] PgnParser.ResultTagContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PgnParser.optionalTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionalTag([NotNull] PgnParser.OptionalTagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PgnParser.optionalTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionalTag([NotNull] PgnParser.OptionalTagContext context);
}
} // namespace Redchess.Pgn
