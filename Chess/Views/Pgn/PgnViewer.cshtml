@using System.Web.Mvc.Html

@{
    ViewBag.Title = "PGN parser";
}

<script src="/Scripts/app/chessboard-0.3.0.js"></script>
<link rel="stylesheet" type="text/css" href="/Scripts/app/chessboard-0.3.0.css"/>
<link rel="stylesheet" type="text/css" href="/Scripts/app/viewer.css"/>
    
<script>
    var positions;
    var board;
    var lastMove = 0; // Total number of moves in the game
    var currentMove = 0;

    function clickText() {
        $("#m" + currentMove).removeClass("highlightText");
        $(this).addClass("highlightText");
        currentMove = parseInt(this.id.substr(1));
        updateBoard(currentMove);
    }

    function ProcessServerResponse(data) {
        positions = data.FenPositions;
        lastMove = data.FenPositions.length;
        $("#errors").text(data.ErrorText.join(" "));
        var cfg = { pieceTheme: '/Images/{piece}.png', position: '', showNotation: false };
        board = new ChessBoard('board', cfg);
        board.position(positions[0].Fen);
        updateBoard(0);
        PopulateMovesBox();
        $("#main").show();
        $('#title').text(data.Tags.White + " vs " + data.Tags.Black);
    }

    function updateBoard(newMove) {
        $("span#goBack").show();
        $("span#goForward").show();

        if (newMove == 0) {
            $("span#goBack").hide();
        }

        if (positions[newMove + 1] == null) {
            $("span#goForward").hide();
        }

        board.position(positions[newMove].Fen);
    }

    function PopulateMovesBox() {
        var moveNumber = 1;
        $('#moves').empty();

        for (i = 1; i < lastMove; i+=2) {
            var originalI1 = i;
            var originalI2 = i + 1;

            var text = "<tr><td class=\"movenumber\">" + moveNumber++ + ".</td><td id=\"m" + originalI1 + "\">" + positions[originalI1].Move + "</td> ";
            if(originalI2 < lastMove) {
                text += "<td id=\"m" + originalI2 + "\">" + positions[originalI2].Move + "</td>";
            }
            text += "</tr>";

            $("#moves").append(text);

            $("#m" + originalI1).on("click", clickText);
            $("#m" + originalI2).on("click", clickText);
        }
    }

    $(document).ready(function() {
        // display the first div by default.
        $("#accordion div").first().height($("#textarea").height());

        $( "#createForm" ).submit(function() {
            return ($("#textarea").val().length > 0);
        });

        $("#submitbutton").click(function() {
            $.post("/Pgn/Create", {
                    "pgnText": $("#textarea").val(),
                    "__RequestVerificationToken": $('[name=__RequestVerificationToken]').val()
                }
            ).done(ProcessServerResponse);
        });

        // Get all the links.
        var link = $("#accordion a");

        // On clicking of the links do something.
        link.on('click', function(e) {
            e.preventDefault();

            var a = $(this).attr("href");

            if($(a).is(':hidden')) {
                $(a).slideDown('fast');
            }
            else {
                $(a).slideUp('fast');
            }

            $("#accordion div").not(a).slideUp('fast');    
        });

        $("#main").hide();

        var cfg = { pieceTheme: '/Images/{piece}.png', position: '', showNotation: false };
        board = new ChessBoard('board', cfg);

        $("span.button").mouseover(function () {
            $(this).parent().fadeTo(40, 1.0);
        }).mouseout(function () {
            $(this).parent().fadeTo(40, 0.7);
        });

        $("#goForward").on("click", function () {
            if (currentMove == lastMove - 1) return;
            updateBoard(currentMove + 1);
            $("#m" + currentMove).removeClass("highlightText");
            currentMove++;
            $("#m" + currentMove).addClass("highlightText");
        });

        $("#goBack").on("click", function () {
            if (currentMove == 0) return;
            updateBoard(currentMove - 1);
            $("#m" + currentMove).removeClass("highlightText");
            currentMove--;
            $("#m" + currentMove).addClass("highlightText");
        });

        $("#goStart").on("click", function () {
            updateBoard(0);
            $("#m" + currentMove).removeClass("highlightText");
            currentMove = 0;
            $("#m" + currentMove).addClass("highlightText");
        });

        $("#goEnd").on("click", function () {
            updateBoard(lastMove-1);
            $("#m" + currentMove).removeClass("highlightText");
            currentMove = lastMove-1;
            $("#m" + currentMove).addClass("highlightText");
        });

        $("#goFlip").on("click", function () {
            board.flip();
        });
    });
</script>

<div id="accordion">
    <a href="#one" class="pgn-header">Enter PGN<span class="buttonright"><input type="submit" value="Submit" id="submitbutton"/></span></a>
    <div id="one">
        @using (Html.BeginForm("Create", "Pgn", FormMethod.Post, new {id = "createForm"}))
        {
            @Html.AntiForgeryToken()
            <textarea rows="12" id="textarea" name="pgnText"></textarea>
        }
    </div>
</div>
<p id="errors"></p>
            
<div id="main">
    <div class="left">
        <p class="title">&nbsp;</p>
        <div id="scrollbox"><table id="moves"></table></div>
    </div>

    <div class="left">
        <p class="title" id="title"></p>
        <div id="board"></div>
        <div class="navigation">
            <div class="wrapper"><span class="button" id="goStart"></span></div>
            <div class="wrapper"><span class="button" id="goBack"></span></div>
            <div class="wrapper"><span class="button" id="goFlip"></span></div> 
            <div class="wrapper"><span class="button" id="goEnd"></span></div>
            <div class="wrapper"><span class="button" id="goForward"></span></div>
        </div>
    </div>
</div>

@section Scripts {
 @Scripts.Render("~/bundles/jqueryval")
}
