@using RedChess.WebEngine.Models
@model int

@section head
{
    <link rel="stylesheet" type="text/css" href="/Scripts/app/viewer.css"/>
    <script src="/Scripts/app/boardviewer.js" type="text/javascript"></script>
    <script src="/Scripts/d3/d3.min.js" type="text/javascript"></script>
}

    @{
        ViewBag.Title = "History";
    }

<style>
    path { fill : none; stroke: steelblue; }
    .x-axis line { fill: none; stroke: #000; stroke-width: 1.5px}
    .x-axis path { fill: none; stroke: #000; stroke-width: 1.5px}
</style>

<script>
    function showGraph(evaluationData) { // domain([d3.min(evaluationData), d3.max(evaluationData)])
        var width = 512;
        var height = 64;

        var absoluteMax = d3.max(evaluationData, function(p) { return Math.abs(p); });

        var svg = d3.select("#svg").append("svg").attr("width", width).attr("height", height).append("g").data(evaluationData);
        var x = d3.scale.linear().domain([0, evaluationData.length]).range([0, width]);
        var y = d3.scale.linear().domain([-absoluteMax, absoluteMax]).range([height, 0]);
        var xAxis = d3.svg.axis().scale(x).orient("bottom").tickFormat(d3.format("d"));
        var line = d3.svg.line().x(function (d,i) { return x(i); }).y(function (d,i) { return y(d); });

        svg.append("g").attr("class", "x-axis").attr("transform","translate(0,32)").call(xAxis);
        svg.append("path").attr("d", line(evaluationData));

    }

    $(document).ready(function () {
        var cfg = { pieceTheme: '/Images/{piece}.png', position: '', showNotation: false };
        var board = new ChessBoard('board', cfg);
        var emptyData = { Moves: [{ Fen: "", Move: "" }], Description: "", IsParticipant: false };
        var boardViewer = new BoardViewer(emptyData, board);
        boardViewer.startSpinning();

        $.getJSON("/api/Moves/@Model")
            .always(function() {
                boardViewer.stopSpinning();
            })
            .done(function (data) {
                boardViewer = new BoardViewer(data, board);

                var evaluationData = data.Analysis.map(function (x) { return x.Evaluation; });
                if (evaluationData.length === 0) {
                    showGraph([1, 2, 3, 0, -6, 3, 2, 9, 0]);
                } else {
                    // Start data at zero
                    evaluationData.unshift(0);
                    showGraph(evaluationData);
                }

                $('#title').text(data.Description);
                $('span#desc').text(data.Description);
                $("#pgn-button").click(function() {
                    location.href = "/History/Pgn/@Model";
                });
            }).fail(function (jqXHR, textStatus, errorThrown) {
                $('span#desc').text(jqXHR.status + " " + errorThrown);
                $("table#moves").append("<tr><td>" + jqXHR.responseJSON.message + "</td></tr>");
                $("table#moves").append("<tr><td>" + jqXHR.responseJSON.messageDetail + "</td></tr>");
                $("#pgn-button").hide();
            });
    });
</script>
<div class="row">
    <div class="col-lg-3" id="spinner-location">
    </div>
</div>
    <div class="row">
        <div class="col-lg-3">
            <div class="panel panel-default">
                <div class="panel-heading"><span id="desc"></span> <div class="pull-right btn btn-xs btn-primary" id="pgn-button">PGN</div></div>
                <div id="scrollbox" class="panel-body pre-scrollable" style="max-height: 465px">
                    <table id="moves"></table>
                </div>
            </div>
        </div>
        <div class="col-lg-7">
            <div id="board"></div>
            <div id="svg"></div>
        </div>
    </div>
<div class="row">
    <div class="col-lg-3">

    </div>
    <div class="col-lg-7">
        <div style="width: 512px">
            <div class="wrapper"><span class="button" id="goStart"></span></div>
            <div class="wrapper"><span class="button" id="goBack"></span></div>
            <div class="wrapper"><span class="button" id="playFromHere" title="Play from here"></span></div>
            <div class="wrapper"><span class="button" id="goFlip"></span></div>
            <div class="wrapper"><span class="button" id="goEnd"></span></div>
            <div class="wrapper"><span class="button" id="goForward"></span></div>
        </div>
    </div>

</div>


