@model int

@section Head
{
    <link rel="stylesheet" type="text/css" href="/Scripts/app/viewer.css"/>
    <script src="/Scripts/app/boardviewer.js" type="text/javascript"></script>
    <script src="/Scripts/d3/d3.min.js" type="text/javascript"></script>
}

    @{
        ViewBag.Title = "History";
    }

<style>
    path { fill : none; stroke: steelblue; }
    .x-axis line { fill: none; stroke: #000; stroke-width: 1.5px}
    .x-axis path { fill: none; stroke: #000; stroke-width: 1.5px}
    .blob { fill: steelblue; }
    .mateblack { fill: #2f2f2f }
    .matewhite { fill: white; stroke: black; stroke-width: 1px}
</style>

<script>
    function showGraph(boardViewer, evaluationData, gameOver) { // domain([d3.min(evaluationData), d3.max(evaluationData)])
        var width = 512;
        var height = 64;

        // Because it might come out of the database in any order
        evaluationData.sort(function(a, b) { return (a.move < b.move) ? -1 : (a.move > b.move) ? 1 : 0; });

        // Scale off anything above 2500
        var absoluteMax = Math.min(2500, d3.max(evaluationData, function(p) { return Math.abs(p.score); }));

        var svg = d3.select("#svg").append("svg").attr("width", width).attr("height", height).append("g").data(evaluationData);
        var x = d3.scale.linear().domain([0, evaluationData.length]).range([0, width]);
        var y = d3.scale.linear().domain([-absoluteMax, absoluteMax]).range([height, 0]);
        var xAxis = d3.svg.axis().scale(x).orient("bottom").tickFormat(d3.format("d"));
        var line = d3.svg.line().x(function(d, i) { return x(d.move); }).y(function(d, i) { return y(d.score); });

        svg.append("g").attr("class", "x-axis").attr("transform", "translate(0,32)").call(xAxis);
        svg.append("path").attr("d", line(evaluationData));
        var x0 = x(evaluationData[0].move);
        var y0 = y(evaluationData[0].score);
        svg.append("circle").attr("r", 5).attr("cx", x0).attr("cy", y0).attr("class", "blob");

        boardViewer.onMoveSelected(function(moveNumber) {
            var svgElement = d3.select("svg");
            svgElement.selectAll("circle").remove();
            svgElement.selectAll("text").remove();

            if (moveNumber > evaluationData.length - 1) {
                if (gameOver) {
                    $("#upper-analysis").text("Game over");
                } else {
                    $("#upper-analysis").text("No analysis for this move");
                }

                $("#scrollbox2").text("");
                return;
            }

            var yPosition;
            var xPosition = x(moveNumber);
            if (evaluationData[moveNumber].scoreType === 1) { // corresponds to enum MateInN
                var score = evaluationData[moveNumber].score;
                var whiteWin = Math.sign(score) === 1;
                var mateClass = whiteWin ? "matewhite" : "mateblack";
                yPosition = y0;
                svgElement.append("circle").attr("r", 5).attr("cx", xPosition).attr("cy", yPosition).attr("class", mateClass);
                svgElement.append("text").attr("fill", "red").attr("x", xPosition).attr("y", yPosition - 10).text(Math.abs(score));
                var indicator = whiteWin ? "&#x2654;" : "&#x265a;"; // White king / Black king unicode symbols
                $("#upper-analysis").html(indicator + " Mate in " + Math.abs(score));
            } else {
                yPosition = y(evaluationData[moveNumber].score);
                svgElement.append("circle").attr("r", 5).attr("cx", xPosition).attr("cy", yPosition).attr("class", "blob");
                $("#upper-analysis").text(evaluationData[moveNumber].score);
            };

            $("#analysisMoves").remove();

            if ("lines" in evaluationData[moveNumber] && evaluationData[moveNumber].lines.length > 0) {
                $("#scrollbox2").append("<table id=\"analysisMoves\"></table>");
                var analysisMoves = $("#analysisMoves");

                function functionMaker(f, link) {
                    return function() {
                        boardViewer.setFen(f);
                        $("table#analysisMoves td").css("font-weight", "normal");
                        link.css("font-weight", "bold");
                    };
                };

                var moveNumberDisplay = evaluationData[moveNumber].lines[0].MoveNumber;
                var lastMove = evaluationData[moveNumber].lines.length;

                for (var i = 0; i < lastMove; i += 2) {
                    var originalI1 = i;
                    var originalI2 = i + 1;
                    var evaluationLine2 = "";
                    var evaluationLine1 = evaluationData[moveNumber].lines[originalI1];

                    var text = "<tr><td class=\"movenumber\">" + moveNumberDisplay++ + ".</td><td id=\"em" + originalI1 + "\">" + evaluationLine1.Move + "</td>";
                    if (originalI2 < lastMove) {
                        evaluationLine2 = evaluationData[moveNumber].lines[originalI2];
                        text += "<td id=\"em" + originalI2 + "\">" + evaluationLine2.Move + "</td>";
                    }

                    analysisMoves.append(text);

                    var firstMove = $("td#em" + originalI1);
                    firstMove.on("click", functionMaker(evaluationLine1.Fen, firstMove));
                    if (originalI2 < lastMove) {
                        var secondMove = $("td#em" + originalI2);
                        secondMove.on("click", functionMaker(evaluationLine2.Fen, secondMove));
                    }
                }
            }
        });
    }

    $(document).ready(function() {
        var cfg = { pieceTheme: '/Images/{piece}.png', position: '', showNotation: false };
        var board = new ChessBoard('board', cfg);
        var emptyData = { Moves: [{ Fen: "", Move: "" }], Description: "", IsParticipant: false };
        var boardViewer = new BoardViewer(emptyData, board, '@Model');
        boardViewer.startSpinning();

        $.getJSON("/api/Moves/@Model")
            .always(function() {
                boardViewer.stopSpinning();
            })
            .done(function(data) {
                var moves = data.Moves.length;
                var analyzedMoves = data.Analysis.length;

                if (moves - analyzedMoves !== 1) {
                    $("#analysisTitle").text("Analysis (completed " + analyzedMoves + "/" + moves + ")");
                }

                boardViewer = new BoardViewer(data, board, '@Model');
                // We add an extra move 0 to make the graph start at evens, so moveNumber must be incremented
                var evaluationData = data.Analysis.map(function(x) { return { move: x.MoveNumber + 1, score: x.Evaluation, scoreType: x.BoardEvaluationType, analysis: x.AnalysisText, lines: x.AnalysisLines }; });
                if (evaluationData.length === 0) {
                    showGraph(boardViewer, [
                        {
                            move: 2,
                            score: 0,
                            scoreType: 0,
                            analysis: "Hello",
                            lines: [
                                {
                                    AnalysisLineId: 1,
                                    GameId: 3503,
                                    AnalysisEntryId: 2255,
                                    Move: "fxe5",
                                    Fen: "rnbqkbnr/pppp1ppp/8/4P3/8/8/PPPPP1PP/RNBQKBNR b KQkq - 0",
                                    MoveNumber: 2
                                },
                                {
                                    AnalysisLineId: 2,
                                    GameId: 3503,
                                    AnalysisEntryId: 2255,
                                    Move: "d6",
                                    Fen: "rnbqkbnr/ppp2ppp/3p4/4P3/8/8/PPPPP1PP/RNBQKBNR w KQkq - 0",
                                    MoveNumber: 3
                                },
                                {
                                    AnalysisLineId: 3,
                                    GameId: 3503,
                                    AnalysisEntryId: 2255,
                                    Move: "exd6",
                                    Fen: "rnbqkbnr/ppp2ppp/3P4/8/8/8/PPPPP1PP/RNBQKBNR b KQkq - 0",
                                    MoveNumber: 4
                                },
                                {
                                    AnalysisLineId: 5,
                                    GameId: 3503,
                                    AnalysisEntryId: 2255,
                                    Move: "Bxd6",
                                    Fen: "rnbqk1nr/ppp2ppp/3b4/8/8/8/PPPPP1PP/RNBQKBNR w KQkq - 0",
                                    MoveNumber: 5
                                },
                                {
                                    AnalysisLineId: 7,
                                    GameId: 3503,
                                    AnalysisEntryId: 2255,
                                    Move: "Nf3",
                                    Fen: "rnbqk1nr/ppp2ppp/3b4/8/8/5N2/PPPPP1PP/RNBQKB1R b KQkq - 1",
                                    MoveNumber: 6
                                },
                                {
                                    AnalysisLineId: 10,
                                    GameId: 3503,
                                    AnalysisEntryId: 2255,
                                    Move: "Nf6",
                                    Fen: "rnbqk2r/ppp2ppp/3b1n2/8/8/5N2/PPPPP1PP/RNBQKB1R w KQkq - 2",
                                    MoveNumber: 7
                                }
                            ]
                        },
                        { move: 1, score: -4, scoreType: 1, analysis: "Something" },
                        { move: 0, score: 3, scoreType: 1 },
                        { move: 3, score: 8, scoreType: 0 }
                    ]);
                } else {
                    // Start data at zero
                    evaluationData.unshift({ move: 0, score: 0, scoreType: 0 });
                    showGraph(boardViewer, evaluationData, data.GameOver);
                }

                $('#title').text(data.Description);
                $('span#desc').text(data.Description);
                $("#pgn-button").click(function() {
                    location.href = "/History/Pgn/@Model";
                });
            }).fail(function (jqXHR, textStatus, errorThrown) {
                $('span#desc').text(jqXHR.status + " " + errorThrown);
                $("table#moves").append("<tr><td>" + jqXHR.responseJSON.message + "</td></tr>");
                $("table#moves").append("<tr><td>" + jqXHR.responseJSON.messageDetail + "</td></tr>");
                $("#pgn-button").hide();
            });
    });
</script>
<div class="row">
    <div class="col-lg-3" id="spinner-location">
    </div>
</div>
    <div class="row">
        <div class="col-lg-3">
            <div class="panel panel-default">
                <div class="panel-heading"><span id="desc"></span> <div class="pull-right btn btn-xs btn-primary" id="pgn-button">PGN</div></div>
                <div id="scrollbox" class="panel-body pre-scrollable" style="max-height: 465px">
                    <table id="moves"></table>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div id="board"></div>
            <div id="svg"></div>
        </div>
        <div class="col-lg-3">
            <div class="panel panel-info">
                <div class="panel-heading" id="analysisTitle">Analysis</div>
                <div id="upper-analysis" class="panel-body"></div>
                <div id="scrollbox2" class="panel-body pre-scrollable" style="max-height: 465px"></div>
            </div>
        </div>
    </div>
<div class="row">
    <div class="col-lg-3">

    </div>
    <div class="col-lg-7">
        <div style="width: 512px">
            <div class="wrapper"><span class="button" id="goStart"></span></div>
            <div class="wrapper"><span class="button" id="goBack"></span></div>
            <div class="wrapper"><span class="button" id="playFromHere" title="Play from here"></span></div>
            <div class="wrapper"><span class="button" id="goFlip"></span></div>
            <div class="wrapper"><span class="button" id="goEnd"></span></div>
            <div class="wrapper"><span class="button" id="goForward"></span></div>
        </div>
    </div>

</div>


