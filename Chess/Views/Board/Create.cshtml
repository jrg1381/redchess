@using System.Web.Mvc.Html
@model IEnumerable<RedChess.WebEngine.Models.UserProfile>

@{
    ViewBag.Title = "New game";
}

<h2>New game</h2>

@using (Html.BeginForm("Create", "Board", FormMethod.Post, new { id = "createForm", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        <div class="form-group">
            <label for="Opponent">Opponent</label>
            @Html.DropDownList("Opponent", Model.Select(x => new SelectListItem {Text = x.UserName, Value = x.UserId.ToString()}), new {@class = "form-control"})
        </div>

        <div class="checkbox">
            <label><input type="checkbox" name="PlayAsBlack" value="true"/>Play as black</label>
        </div>
        <div class="checkbox">
            <label><input id="UseClock" type="checkbox" name="UseClock" value="true"/>Use clock</label>
        </div>
        <div class="form-group" id="TimeLimitGroup">
            <label for="TimeLimit">Time limit (minutes)</label>
            <input type="number" min="1" max="180" class="form-control" id="TimeLimit" name="TimeLimit" disabled>
        </div>
        <div data-valmsg-summary="true" class="validation-summary-valid">
            <ul>
                <li style="display: none"></li>
            </ul>
        </div>
    </div>

    <div class="btn-group" role="group">
        <button type="button" class="btn btn-primary" id="submitbutton">Create</button>
        <button type="button" class="btn btn-default">@Html.ActionLink("Back to List", "Index")</button>
    </div>
}

<script>
    $(document).ready(function() {
        $("input#UseClock").change(function (data) {
            if (this.checked) {
                $("input#TimeLimit").removeAttr("disabled");
            }
            else {
                $("input#TimeLimit").attr("disabled","");
            }
        });

        $("#createForm").valid();
        $("button#submitbutton").click(SubmitForm);
    });

    function markErrors(theForm) {
        var errorSummaryAnyState = theForm.find('.validation-summary-errors, .validation-summary-valid');
        var errorSummary = errorSummaryAnyState.removeClass('validation-summary-valid').addClass('validation-summary-errors');
        return errorSummary;
    }

    function SubmitForm() {
        var theButton = $("button#submitbutton");
        var theForm = $("#createForm");

        if (!theForm.valid())
            return false;

        theButton.attr('disabled', true);

        $.ajax({
            type: "POST",
            url: theForm.attr('action'),
            data: theForm.serialize(), // serializes the form's elements.
            success: function (data) {
                if (!data.success) {
                    var errorSummary = markErrors(theForm);

                    var items = $.map(data.errors, function (error) {
                        return '<li>' + error + '</li>';
                    }).join('');

                    errorSummary.find('ul').empty().append(items);
                }
                else {
                    document.location = data.redirect;
                }
            },
            error: function (jqXhr, textStatus, errorThrown) {
                var errorSummary = markErrors(theForm);
                errorSummary.find('ul').empty().append("<li>"+ textStatus + "</li>");
            },
            complete : function() {
                theButton.removeAttr("disabled");
            }
        });
        
        return false; // avoid to execute the actual submit of the form.
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
