@model RedChess.WebEngine.Repositories.Interfaces.IGameBinding

@{
    ViewBag.Title = "Game";
}

<script src="/Scripts/jquery.cookie.js"></script>
<script src="/Scripts/jquery.signalR-2.2.0.min.js" type="text/javascript"></script>
<script src="/signalr/hubs"></script>

@{
    var clockModel = @Model.Clock;
}

<script type="text/javascript">
    $(document).ready(function() {
        var gameId = @Model.GameId;
        var currentPlayerColor = '@Model.CurrentPlayerColor(@User.Identity.Name)';
        var myClock = null;
        var analysisBoard = false;

        @if (clockModel != null)
        {
            <text>
                myClock = new Clock(gameId, @clockModel.TimeLimitMs);
            </text>
        }

        @if (Model.UserProfileBlack.UserId == Model.UserProfileWhite.UserId)
        {
            <text>analysisBoard = true;</text>
        };

        var theChess = new Chess(gameId, currentPlayerColor, myClock, analysisBoard);

        $("#resignbutton").click(function() {
            theChess.resignGame();
        });

        $("#drawbutton").click(function() {
            theChess.claimDraw();
        });

        @if (clockModel != null)
        {
            <text>
            myClock.ClockDocumentReady();
            </text>
        }

        theChess.updateUi('@Model.Fen');

        // Draw any user messages, and update the set of taken pieces
        @if (!String.IsNullOrEmpty(@Model.Status))
        {
            <text>
                $("#messages").text('@Model.Status');
                $("#messages").parent().css('visibility', 'visible');
            </text>
        }
        else
        {
            <text>
                $("#messages").html('&nbsp;');
                $("#messages").parent().css('visibility', 'hidden');
            </text>
        }

        $("#lastmove").text('@Model.LastMove');
        theChess.updateTakenPieces('@Model.Fen');

        @if (Model.MayClaimDraw) {
            <text>$('#drawbutton').show()</text>
        }

        @if (Model.GameOver) {
            <text>theChess.endGame();</text>
        }
        

        @if (@Model.ShouldLockUi) {
            <text>theChess.lockBoard();</text>
        }
    });
</script>  

 @if (!Request.IsAuthenticated)
 {
     <text><div>You must be <a href="/">logged in</a> to participate in games.</div></text>
 }

<div class="row">
    <div class="col-md-7">
        <h2 id="title">@Model.Description</h2>
        <div style="width: 512px; margin-bottom: 10px" id="board"></div>
        
        <div class="btn-group" role="group">
                <a class="btn btn-default" id="resignbutton">Resign</a>
                <a class="btn btn-default" id="drawbutton">Claim draw</a>
        </div>
    </div>

    <div class="col-md-3">
        <div class="alert alert-danger" role="alert" style="visibility: hidden">
            <div id="messages" style="text-align: center">&nbsp;</div>
        </div>
        <div id="submitmove">
            @using (Html.BeginForm("PlayMove", "Board", FormMethod.Post, new { @class = "form-inline"}))
            {
                var items = new List<SelectListItem>
                {
                    new SelectListItem {Value = "Queen", Text = "Queen"},
                    new SelectListItem {Value = "Rook", Text = "Rook"},
                    new SelectListItem {Value = "Knight", Text = "Knight"},
                    new SelectListItem {Value = "Bishop", Text = "Bishop"},
                };

                @Html.AntiForgeryToken()
                @Html.Hidden("Id", Model.GameId)
                @Html.Hidden("Start")
                @Html.Hidden("End")

                <div class="form-group" style="margin-bottom : 10px">
                    <div class="input-group">
                        @Html.DropDownList("Promote", items, new { @class = "form-control"})
                    </div>
                        <input type="submit" value="Submit" id="submitbutton" class="btn btn-primary"/>
                </div>
            }

            @if (clockModel != null)
            {
                @Html.Partial("_Clock", clockModel)
            }

            <div class="well">
                <div id="lastmove"></div>
                <div id="turnindicator"></div>
            </div>
            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="blacktaken" style="font-size: 36pt;"></div>
                    <div id="whitetaken" style="font-size: 36pt;"></div>
                </div>
            </div>
        </div>
    </div>
</div>


