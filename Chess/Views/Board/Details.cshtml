@using RedChess.ChessCommon.Enumerations
@model RedChess.WebEngine.Repositories.Interfaces.IGameBinding

@{
    ViewBag.Title = "Game";
}

<style>
    .thick-thumbnail {
    border : 1px solid #337ab7
}
</style>

<script src="/Scripts/jquery.cookie.js"></script>
<script src="/Scripts/jquery.signalR-2.2.0.min.js" type="text/javascript"></script>
<script src="/signalr/hubs"></script>

@{
    var clockModel = @Model.Clock;
}

<script type="text/javascript">
    $(document).ready(function() {
        var gameId = @Model.GameId;
        var currentPlayerColor = '@Model.CurrentPlayerColor(@User.Identity.Name)';
        var myClock = null;
        var analysisBoard = false;

        @if (clockModel != null)
        {
            <text>
                myClock = new Clock(gameId, @clockModel.TimeLimitMs);
            </text>
        }

        @if (Model.UserProfileBlack.UserId == Model.UserProfileWhite.UserId)
        {
            <text>analysisBoard = true;</text>
        };

        var theChess = new Chess(gameId, currentPlayerColor, myClock, analysisBoard);

        $("#resignbutton").click(function(event) {
            if ($(event.target).attr("disabled") === "disabled") {
                return;
            }
            theChess.resignGame();
        });

        $("#drawbutton").click(function(event) {
            if ($(event.target).attr("disabled") === "disabled") {
                return;
            }
            theChess.offerDraw();
        });

        $("#drawoffer").hide();
        $("#drawoffer-sent").hide();
        $("#promotion-selection").hide();

        $("#accept-draw-request").click(function() {
            theChess.respondToDrawOffer(true);
            $("#drawoffer").hide();
        });

        $("#reject-draw-request").click(function() {
            theChess.respondToDrawOffer(false);
            $("#drawoffer").hide();
        });

        // Configure the promotion dialog

        $(".thumbnail").click(function(e) {
            theChess.postMove(this.id);
        });

        var pieces = ['Q', 'R', 'N', 'B'];
        for(var pIndex = 0;pIndex<pieces.length; pIndex++) {
            var tnail = $(".thumbnail#" + pieces[pIndex]);
            var img = $("<img></img>");
            img.attr("width", "64px");
            img.attr("src", "/Images/" + theChess.currentPlayerColor + pieces[pIndex] + ".png");
            tnail.append(img);
        }

        // Hover behaviour
        $('.thumbnail').hover(
            function() {
                $(this).addClass("thick-thumbnail");
            },
            function() {
                $(this).removeClass("thick-thumbnail");
            });


        @if (clockModel != null)
        {
            <text>
            myClock.ClockDocumentReady();
            </text>
        }

        theChess.updateUi('@Model.Fen');

        // Draw any user messages, and update the set of taken pieces
        @if (!String.IsNullOrEmpty(@Model.Status))
        {
            <text>
                $("#messages").text('@Model.Status');
                $("#messages").parent().css('visibility', 'visible');
            </text>
        }
        else
        {
            <text>
                $("#messages").html('&nbsp;');
                $("#messages").parent().css('visibility', 'hidden');
            </text>
        }

        $("#lastmove").text('@Model.LastMove');
        theChess.updateTakenPieces('@Model.Fen');

        @if (Model.MayClaimDraw)
        {
            <text>
        $("#drawbutton").text("Claim draw");
        $("#drawbutton").off();
        $("#drawbutton").addClass("btn-primary");
        $("#drawbutton").click(function() {
            theChess.claimDraw();
        });
        </text>
        }

        @if (Model.GameOver) {
            <text>theChess.endGame();</text>
        }
        

        @if (@Model.ShouldLockUi) {
            <text>theChess.lockBoard();</text>
        }

        @if (!String.IsNullOrEmpty(Model.LastMove))
        {
            <text>theChess.highlightLastMove('@Model.LastMoveStart', '@Model.LastMoveEnd');</text>
        }

        if (currentPlayerColor === "") {
            $("#resignbutton").hide();
            $("#drawbutton").hide();
        }

    });
</script>  

 @if (!Request.IsAuthenticated)
 {
     <text><div>You must be <a href="/">logged in</a> to participate in games.</div></text>
 }

<div class="row">
    <div class="col-md-7">
        <h2 id="title">@Model.Description</h2>
        <div style="width: 512px; margin-bottom: 10px" id="board"></div>

        <div class="btn-group" role="group" id="board-controls">
            <a class="btn btn-default" id="resignbutton">Resign</a>
            <a class="btn btn-default" id="drawbutton">Offer draw</a>
        </div>
    </div>

    <div class="col-md-3">
        <div class="alert alert-danger" role="alert" style="visibility: hidden">
            <div id="messages" style="text-align: center">&nbsp;</div>
        </div>
        <div>
            <div class="panel panel-primary" id="promotion-selection">
                <div class="panel-heading">Promote piece</div>
                <div class="panel-body">
                    <div class="thumbnail" id="Q"></div>
                    <div class="thumbnail" id="R"></div>
                    <div class="thumbnail" id="N"></div>
                    <div class="thumbnail" id="B"></div>
                </div>
            </div>

            @if (clockModel != null)
            {
                @Html.Partial("_Clock", clockModel)
            }

            <div class="well">
                <div id="lastmove"></div>
                <div id="turnindicator"></div>
            </div>

            <div id="drawoffer" class="alert alert-warning">
                <span class="glyphicon glyphicon-user" aria-hidden="true"></span><strong> Draw?</strong>&nbsp;&nbsp;
                <div class="btn-group" role="group">
                    <a class="btn btn-default" id="accept-draw-request">Accept</a>
                    <a class="btn btn-default" id="reject-draw-request">Reject</a>
                </div>
            </div>

            <div id="drawoffer-sent" class="alert alert-warning">
                <span class="glyphicon glyphicon-user" aria-hidden="true"></span><strong>Offer sent</strong> - awaiting response
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="blacktaken" style="font-size: 36pt;"></div>
                    <div id="whitetaken" style="font-size: 36pt;"></div>
                </div>
            </div>
        </div>
    </div>
</div>


