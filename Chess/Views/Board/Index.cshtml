@using Chess.Models
@using RedChess.WebEngine.Repositories
@using RedChess.WebEngine.Repositories.Interfaces
@model object

    @{
        ViewBag.Title = "Index of games";
        var currentUserId = WebSecurity.CurrentUserId;
        var timeLimitForOldGames = String.Format("{0:yyyy-MM-ddTHH:mm}", DateTime.UtcNow.AddMonths(-1));
    }

<script src="/Scripts/jquery.signalR-2.2.0.min.js" type="text/javascript"></script>
<script src="/signalr/hubs"></script>
    
<script>
    function gameListUpdate(data) {
        updateGameLists();
    }
</script>

@if (!Request.IsAuthenticated)
{
        <p>
            You need to be logged in to create new games.<br />
            <a href="/">Log in</a>
        </p>
}

<script>
    var viewModel = {
        currentGames: ko.observable([]),
        finishedGames: ko.observable([]),
        otherGames: ko.observable([]),
        errors: ko.observableArray([])
    };

    function updateGameLists() {
        // My current games
        $.getJSON("/api/Boards?$filter=(userProfileWhite/userId eq @currentUserId or userProfileBlack/userId eq @currentUserId) and gameOver eq false&$select=fen,gameid,lastmove,status,creationdate,userprofileblack,userprofilewhite,clock&$orderby=creationdate desc")
            .always(function() {})
            .done(function(data) {
                data.forEach(function(element, index) {
                    element.description = element.userprofilewhite.userName + ' vs ' + element.userprofileblack.userName;
                });

                viewModel.currentGames(data);

                $("table#my-current-games-table time.timeago").timeago();

                $("table#my-current-games-table div.miniboard").each(function(index, element) {
                    var originalText = element.innerText;
                    if (originalText == null) {
                        originalText = element.innerHTML;
                    }

                    var shouldFlip = data[index].userprofileblack.userId === @currentUserId;
                    var cfg = { pieceTheme: '/Images/{piece}.png', position: originalText, showNotation: false, orientation: (shouldFlip ? "black" : "white") };
                    var board = new ChessBoard(element, cfg);
                });

                $("#my-current-games-table").show();
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                viewModel.errors.push(jqXHR.statusText);
            });

        // My finished games less than a month old
        $.getJSON("/api/Boards?$filter=(userProfileWhite/userId eq @currentUserId or userProfileBlack/userId eq @currentUserId) and gameOver eq true and completionDate gt datetime'@timeLimitForOldGames'&$select=fen,gameid,status,creationdate,userprofileblack,userprofilewhite,userprofilewinner,clock&$orderBy=creationDate desc")
            .always(function() {})
            .done(function(data) {
                data.forEach(function(element, index) {
                    element.description = gameDescription(element.userprofilewhite, element.userprofileblack, element.userprofilewinner);
                });

                viewModel.finishedGames(data);
                $("table#my-finished-games-table time.timeago").timeago();
                $("#my-finished-games-table").show();
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                viewModel.errors.push(jqXHR.statusText);
            });

        // Other live games
        $.getJSON("/api/Boards?$filter=userProfileWhite/userId ne @currentUserId and userProfileBlack/userId ne @currentUserId and gameOver eq false&$select=fen,gameid,lastmove,status,creationdate,userprofileblack,userprofilewhite,clock&$orderby=creationdate desc")
            .always(function() {})
            .done(function(data) {
                data.forEach(function(element, index) {
                    element.description = element.userprofilewhite.userName + ' vs ' + element.userprofileblack.userName;
                });

                viewModel.otherGames(data);

                $("table#other-games-table div.miniboard").each(function(index, element) {
                    var originalText = element.innerText;
                    if (originalText == null) {
                        originalText = element.innerHTML;
                    }

                    var cfg = { pieceTheme: '/Images/{piece}.png', position: originalText, showNotation: false };
                    var board = new ChessBoard(element, cfg);
                });

                $("table#other-games-table time.timeago").timeago();
                $("#other-games-table").show();
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                viewModel.errors.push(jqXHR.statusText);
            });
    }

    $(document).ready(function() {
        //SignalR stuff
        var updater = $.connection.updateServer;
        // Define a client-side message which the server can call
        updater.client.gameListUpdate = gameListUpdate;

        // Define a callback for when the connection is established. We join the client group for index page watchers
        $.connection.hub.start(function() {
            $.connection.hub.proxies.updateserver.server.join("IndexWatchers");
        });

        ko.applyBindings(viewModel);

        $("#my-current-games-table").hide();
        $('#my-finished-games-table').hide();
        $('#other-games-table').hide();

        updateGameLists();
    });

    function DeleteMultiple() {
        var ids = $(".deleteCheckbox:checked").toArray().map(function(x) { return x.name; }).join();
        if (ids.length === 0) {
            return false;
        };

        getSpinController().startLogoSpinner();
        $.post("/Board/DeleteMultiple",
            { ids: ids, "__RequestVerificationToken": $('[name=__RequestVerificationToken]').val() })
            .done(function(json) {
                json = json || {};

                if (json.success) {
                    window.location = json.redirect || location.href;
                } else {
                    getSpinController().stopLogoSpinner();
                }
            })
            .error(function(jqXhr, textStatus, errorThrown) {
                getSpinController().stopLogoSpinner();
                viewModel.errors.push(textStatus);
            });
    }

    function GoToGame(id) {
        document.location.href = "/Board/Details/" + id;
    }

    function TurnIndicatorText(fen) {
        var f = fen.split(" ");
        if (f[1] === "b") {
            return "Black to play";
        } else {
            return "White to play";
        }
    }

    function gameDescription(userProfileWhite, userProfileBlack, userProfileWinner) {
        var s = userProfileWhite.userName + " vs " + userProfileBlack.userName;

        if (userProfileWinner != null) {
            s = s.replace(userProfileWinner.userName, "<b>" + userProfileWinner.userName + "</b>");
        }

        return s;
    }
</script>

<div data-bind="if:errors().length > 0" id="errors-display">
    <div data-bind="foreach:errors">
        <div class="alert alert-danger" data-bind="text:$data"></div>
    </div>
</div>

@if (Request.IsAuthenticated)
{
    <div class="row" data-bind="if: errors().length == 0">
        <h3>My current games</h3>
        <div class="col-md-10">
            <table class="table" id="my-current-games-table">
                <tbody data-bind="foreach: currentGames">
                <tr>
                    <td width="160px">
                        <div class="miniboard" style="width: 160px" data-bind="text : fen, click : function() { GoToGame(gameid); }"></div>
                    </td>
                    <td>
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h3 class="panel-title" data-bind="text: TurnIndicatorText(fen)"></h3>
                            </div>
                            <div class="panel-body">
                                <div class="btn btn-primary pulseme" data-bind="visible: !lastmove, click : function() { GoToGame(gameid); }">Start playing</div>
                                <span data-bind="if: lastmove"><span data-bind="text: lastmove"></span></span>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h3 class="panel-title">
                                    <a data-bind="text: description, click : function() { GoToGame(gameid); }"></a>
                                </h3>
                                <span data-bind="text: status"></span><br/>
                                <span class="tinier">
                                    Started <time class="timeago" data-bind="text: creationdate + ' UTC', attr: { datetime: creationdate }"></time>
                                </span>
                                <span data-bind="if: clock" style="float: right">
                                    <span data-bind="if: clock" class="glyphicon glyphicon-time"></span>
                                    <span data-bind="text: (clock.timeLimitMs/60000) + 'm'"></span>
                                </span>
                            </div>
                            <div class="panel-body">
                                <a data-bind="attr : { href : '/Board/Details/'+ gameid}">Go to game</a> |
                                <a data-bind="attr : { href : '/Board/Delete/'+ gameid}">Delete</a> |
                                <a data-bind="attr : { href : '/History/Showmove/'+ gameid}">History</a>
                            </div>
                        </div>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="row" data-bind="if: errors().length == 0">
        <h3>My finished games</h3>
        <div class="col-md-10">
            <table class="table" id="my-finished-games-table">
                <tbody data-bind="foreach: finishedGames">
                <tr>
                    <td style="vertical-align: middle">
                        <a data-bind="html : description, attr : { href : '/History/Showmove/'+ gameid}"></a>
                    </td>
                    <td style="vertical-align: middle">
                        <span data-bind="if: clock" style="float: right">
                                    <span data-bind="if: clock" class="glyphicon glyphicon-time"></span>
                                    <span data-bind="text: (clock.timeLimitMs/60000) + 'm'"></span>
                                </span>
                    </td>
                    <td>
                        <span data-bind="text:status"></span><br/><time class="timeago" data-bind="text: creationdate + ' UTC', attr: { datetime: creationdate }"></time>
                    </td>
                    <td style="vertical-align: middle">
                        <a data-bind="attr : { href : '/Board/Delete/'+ gameid}">
                            <span class="glyphicon glyphicon-remove-circle" style="font-size: x-large"></span>
                        </a>
                    </td>
                    <td style="vertical-align: middle">
                        <input class="deleteCheckbox" type="checkbox" value="true" data-bind="attr: { name : gameid}"/>
                    </td>
                </tr>
                </tbody>
                <tfoot data-bind="if: finishedGames().length">
                    <tr><td colspan="4"></td><td><a id="delete-multiple-button" class="btn btn-warning" href="javascript:DeleteMultiple()" title="Delete selected">Delete selected games</a></td></tr>
                </tfoot>
            </table>
        </div>
    </div>
}

<div class="row" data-bind="if: errors().length == 0">
    <h3>Other games</h3>
    <div class="col-md-10">
        <table class="table" id="other-games-table">
            <tbody data-bind="foreach: otherGames">
            <tr>
                <td width="160px">
                    <div class="miniboard" style="width: 160px" data-bind="text : fen, click : function() { GoToGame(gameid); }"></div>
                </td>
                <td>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title" data-bind="text: TurnIndicatorText(fen)"></h3>
                        </div>
                        <div class="panel-body">
                            <span data-bind="if: lastmove"><span data-bind="text: lastmove"></span></span>
                        </div>
                    </div>
                </td>
                <td>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title">
                                <a data-bind="text: description, click : function() { GoToGame(gameid); }"></a>
                            </h3>
                            <span data-bind="text: status"></span><br/>
                            <span class="tinier">
                                                          Started <time class="timeago" data-bind="text: creationdate + ' UTC', attr: { datetime: creationdate }"></time>
                                                      </span>
                            <span data-bind="if: clock" style="float: right">
                                                          <span data-bind="if: clock" class="glyphicon glyphicon-time"></span>
                                                          <span data-bind="text: (clock.timeLimitMs/60000) + 'm'"></span>
                                                      </span>
                        </div>
                        <div class="panel-body">
                            <a data-bind="attr : { href : '/Board/Details/'+ gameid}">Go to game</a> |
                            <a data-bind="attr : { href : '/History/Showmove/'+ gameid}">History</a>
                        </div>
                    </div>
                </td>
            </tr>
            </tbody>
        </table>
    </div>
</div>
