@using Chess.Models
@using RedChess.WebEngine.Repositories
@model IEnumerable<IGameBinding>

    @{
        ViewBag.Title = "Index of games";
    }

    @if (!Request.IsAuthenticated)
    {
        <p>
            You need to be logged in to create new games.<br />
            <a href="/">Log in</a>
        </p>
    }

    <link rel="stylesheet" type="text/css" href="/Scripts/app/chessboard-0.3.0.css" />
    <script src="/Scripts/app/chessboard-0.3.0.js"></script>

    <script>
        $(document).ready(function () {
            $("time.timeago").timeago();

            $("div.miniboard").each(function (index, element) {
                var originalText = element.innerText;
                if (originalText == null) {
                    originalText = element.innerHTML;
                }

                var cfg = { pieceTheme: '/Images/{piece}.png', position: originalText, showNotation: false };
                var board = new ChessBoard(element, cfg);
            });

            $("h3#turnindicator-o,h3#turnindicator-m").each(function (index, element) {
                var originalText = element.innerText;
                if (originalText == null) {
                    originalText = element.innerHTML;
                    element.innerHTML = TurnIndicatorText(originalText);
                }
                else {
                    element.innerText = TurnIndicatorText(originalText);
                }
            });
        });

        function DeleteMultiple() {
            var ids = $(".deleteCheckbox:checked").toArray().map(function (x) { return x.name; }).join();
            $.post("/Board/DeleteMultiple", { ids: ids, "__RequestVerificationToken": $('[name=__RequestVerificationToken]').val() }, function () { location.reload(); });
        }

        function GoToGame(id) {
            document.location.href = "/Board/Details/" + id;
        }

        function TurnIndicatorText(fen) {
            var f = fen.split(" ");
            if (f[1] === "b") {
                return "Black to play";
            } else {
                return "White to play";
            }
        }
    </script>


    @if (Request.IsAuthenticated)
    {
        <div class="row">
            <h3>My current games</h3>
            <div class="col-md-10">
                <table class="table">
                    @foreach (var item in @Model.Where(x => x.CurrentPlayerColor(HttpContext.Current.User.Identity.Name) != "" && !x.GameOver).OrderByDescending(x => x.CreationDate))
                    {

                        var iso8601datetime = item.CreationDate.ToString("o", System.Globalization.CultureInfo.InvariantCulture);

                        <tr>
                            <td width="300px">
                                <div class="miniboard" id="m-@item.GameId" style="width: 300px" onclick=" gotogame(@item.GameId) ">@item.Fen</div>
                            </td>
                            <td>
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h3 class="panel-title" id="turnindicator-m">@item.Fen</h3>
                                    </div>
                                    <div class="panel-body">
                                        @item.LastMove
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h3 class="panel-title">@item.Description</h3>
                                        @item.Status<br /><time class="timeago" datetime="@iso8601datetime">Started @item.CreationDate UTC</time>
                                    </div>
                                    <div class="panel-body">

                                        @Html.ActionLink("Delete", "Delete", new { id = item.GameId }) | @Html.ActionLink("History", "ShowMove", "History", new { gameId = item.GameId, moveNumber = 1 }, null)
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>

        <div class="row">
            <h3>My finished games</h3>
            <div class="col-md-10">
                <table class="table">
                    @foreach (var item in @Model.Where(x => x.CurrentPlayerColor(HttpContext.Current.User.Identity.Name) != "" && x.GameOver).OrderByDescending(x => x.CompletionDate))
                    {
                        var iso8601Datetime = item.CompletionDate.ToString("o", System.Globalization.CultureInfo.InvariantCulture);
                        string descriptionLink = Html.ActionLink(@item.Description, "ShowMove", "History", new { gameId = item.GameId, moveNumber = 1 }, null).ToString();
                        if (item.UserProfileWinner != null)
                        {
                            descriptionLink = descriptionLink.Replace(item.UserProfileWinner.UserName, "<b>" + item.UserProfileWinner.UserName + "</b>");
                        }

                        <tr>
                            <td style="vertical-align: middle">
                                <div id="f-@item.GameId" onclick=" gotogame(@item.GameId) ">@Html.Raw(@descriptionLink)</div>
                            </td>
                            <td style="vertical-align: middle">
                                @if (item.Clock != null)
                                {
                                    var iso8601GameTimeLimit = String.Format("{0}m", item.Clock.TimeLimitMs / (1000 * 60));
                                    <span class="glyphicon glyphicon-time"></span>
                                    @iso8601GameTimeLimit
                                    ;
                                }
                            </td>
                            <td>
                                @item.Status<br /><time class="timeago" datetime="@iso8601Datetime">Started @item.CreationDate UTC, finished @item.CompletionDate UTC</time>
                            </td>
                            <td style="vertical-align: middle">
                                <a href="/Board/Delete/@item.GameId"><span class="glyphicon glyphicon-remove-circle" style="font-size: x-large"></span></a>
                            </td>
                            <td style="vertical-align: middle">
                                @Html.CheckBox(@item.GameId.ToString(), false, null)
                            </td>
                        </tr>
                    }
                    @if (@Model.Any(x => x.CurrentPlayerColor(HttpContext.Current.User.Identity.Name) != "" && x.GameOver))
                    {
                        <tr><td colspan="4"></td><td><a class="btn btn-default" href="javascript:DeleteMultiple()" title="foo">Delete selected games</a></td></tr>
                    }
                </table>
            </div>
        </div>
    }

<div class="row">
    <h3>Other games</h3>
    <div class="col-md-10">
        <table class="table">
            @foreach (var item in @Model.Where(x => x.CurrentPlayerColor(HttpContext.Current.User.Identity.Name) == "" && !x.GameOver).OrderByDescending(x => x.CreationDate))
            {
                var iso8601datetime = item.CreationDate.ToString("o", System.Globalization.CultureInfo.InvariantCulture);

                <tr>
                    <td width="300px">
                        <div class="miniboard" id="o-@item.GameId" style="width: 300px" onclick=" gotogame(@item.GameId) ">@item.Fen</div>
                    </td>
                    <td>
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h3 class="panel-title" id="turnindicator-o">@item.Fen</h3>
                            </div>
                            <div class="panel-body">
                                @item.LastMove
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h3 class="panel-title">@item.Description</h3>
                                @item.Status<br/><time class="timeago" datetime="@iso8601datetime">Started @item.CreationDate UTC</time>
                            </div>
                            <div class="panel-body">
                                @Html.ActionLink("History", "ShowMove", "History", new {gameId = item.GameId, moveNumber = 1}, null)
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

